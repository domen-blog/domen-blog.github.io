<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Keras Embedding Layer 搭配 gensim Word2Vec 用法]]></title>
      <url>https://domen-blog.github.io/posts/2019-05-05/keras-embedding/</url>
      <content type="html"><![CDATA[<p>在使用 RNN (Recurrent Neural Network) 做文字相關的處理時，我們可以利用 gensim 的 Word2Vec 將一個詞彙轉成一個向量表達。</p>
<p>一個簡單的作法是，將 training data 和 testing data 資料裡的那些詞彙以對應的向量取代，然而這樣會很佔記憶體，以我目前的作業為例（2019 李宏毅 機器學習 作業6，這次作業資料是不公開的），training data + testing data 約 20 MB 但經過 Word2Vec 的轉換後就變成超過 10 GB 了，不僅執行速度慢，甚至電腦上根本不會有那麼多的記憶體。</p>
<p>為了避免這個問題，我們會將 Word2Vec 中的詞彙做個編號(index)，接著將 training / testing data 中的資料以這個編號取代，在 keras 上訓練時，我們則需要將 index 到 vector 的對應傳入（<code>w2v_model.wv.vectors</code>提供了這個對應，以下稱之<code>index2vec</code>）。</p>
<p>用法範例: <a href="https://gist.github.com/domen111/64cb6628cd57c2ffa4f91024ba6190ae" target="_blank" rel="noopener">https://gist.github.com/domen111/64cb6628cd57c2ffa4f91024ba6190ae</a></p>
<p>接著在 keras 上需要利用 <code>keras.layers.Embedding</code>來把<code>index2vec</code>傳入，<code>keras.layers.Embedding</code>參數如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keras.layers.Embedding(input_dim, output_dim, embeddings_initializer=<span class="string">'uniform'</span>, embeddings_regularizer=<span class="keyword">None</span>, activity_regularizer=<span class="keyword">None</span>, embeddings_constraint=<span class="keyword">None</span>, mask_zero=<span class="keyword">False</span>, input_length=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure></p>
<p>在 model 的第一層加入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.add(Embedding(index2vec.shape[<span class="number">0</span>], index2vec.shape[<span class="number">1</span>], weights=[index2vec], trainable=<span class="keyword">False</span>))</span><br></pre></td></tr></table></figure></p>
<p><code>weights</code>指定要把每個詞彙 Embedding 成什麼，也就是我們的 <code>index2vec</code> 表格，<code>input_dim</code>指定字典的大小，<code>output_dim</code>指定向量的長度。</p>
]]></content>
      
        <categories>
            
            <category> Machine Learning </category>
            
        </categories>
        
        
        <tags>
            
            <tag> RNN </tag>
            
            <tag> Keras </tag>
            
            <tag> Embedding </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Online Judge 基礎觀念：多測資輸入不需把資料都讀入後再輸出]]></title>
      <url>https://domen-blog.github.io/posts/2016-09-19/online-judge-multiple-input/</url>
      <content type="html"><![CDATA[<p>有的題目會要求一次輸入多筆測資，例如：<br><a href="http://toj.tfcis.org/oj/pro/3/" target="_blank" rel="noopener">TOJ 3</a><br><a href="https://judgegirl.csie.org/problem/0/80" target="_blank" rel="noopener">NTU judgegirl 80</a></p>
<p>常見初學者的寫法會將所有的資料讀入，存進陣列裡面，一個一個處理完之後再輸出。</p>
<p>但事實上不需要這麼做，你只需要每次讀入一個一組測資，直接輸出答案就行了！完全不需要浪費額外記憶體去開陣列。<br>以 TOJ 5 為例：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="comment">/*略*/</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> T;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;T;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> a,b;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;a,&amp;b);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>,gcd(a,b));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>題目的output不是要求要一次輸出所有答案嗎？事實上並不是的。在你電腦裡面的terminal（或者cmd）中，輸入和輸出會有即時的互動，也就是說當你打完每一組測試資料，它就會立刻輸出答案，因此你會看到輸入和輸出湊在一起的情況。</p>
<p>在 Online Judge 中，輸入和輸出可以當成兩個檔案，因此先後順序是沒有關係的。<br>在你的電腦中，可以在terminal模擬類似的環境：</p>
<ol>
<li>開啟terminal（在windows上則是cmd）。</li>
<li>使用<code>cd</code>命令切換到測資和執行檔所在的資料夾。</li>
<li>把要輸入的測試資料存成一個文字檔，例如<code>input.txt</code>，</li>
<li>執行以下命令：<code>執行檔 &lt; input.txt &gt; output.txt</code> 或者 <code>執行檔 &lt; input.txt</code>，此處使用了 io redirection 的技巧，細節可以自行上網查詢。</li>
</ol>
<p>我們把<code>input.txt</code>作為程式的輸入資料，輸出的資料則存在<code>output.txt</code>，在 Online Judge 中也是使用類似的方法實作。</p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Introduction </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ntucsiec2016 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UVa 1569 - Multiple]]></title>
      <url>https://domen-blog.github.io/posts/2016-04-14/uva-1569/</url>
      <content type="html"><![CDATA[<p>Link: <a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=4351" target="_blank" rel="noopener">https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=4351</a></p>
<p>自己想不出這題，網路上題解也不多，後來研究了<a href="http://blog.csdn.net/keshuai19940722/article/details/49520841" target="_blank" rel="noopener">這篇</a>的code才知道怎麼寫。</p>
<h4 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h4><p>想個暴利的解法，把題目給定的M個數字排序後，用這些數字去組合，BFS搜索下去(必須用BFS去搜索才會優先找到較小的數字)，搜索的過程一邊模N就能判斷最後是不是N的倍數(搜索完成)。<br>不過這樣的作法複雜度是指數級別的，而且沒辦法判斷是不是找不到答案(需輸出0)。</p>
<p>接著我們可以發現一件事，假設某兩個狀態模N後是一樣的，則由他們到答案的路徑也是一樣的，所以他們之間較晚搜索到的數字可以直接忽略，因此狀態只剩下N種，紀錄一下哪個模數出現過即可。<a id="more"></a></p>
<p>狀態只剩下N種，在這幾種狀態中做BFS，複雜度O(N)。</p>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; x;</span><br><span class="line"><span class="keyword">bool</span> u[<span class="number">5010</span>];</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="string">"0"</span>;</span><br><span class="line">	<span class="built_in">memset</span>(u,<span class="number">0</span>,<span class="keyword">sizeof</span> u);</span><br><span class="line">	<span class="built_in">queue</span>&lt;pair&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt;&gt; q; <span class="comment">//first: value, second: remainder</span></span><br><span class="line">	q.push(&#123;<span class="string">""</span>,<span class="number">0</span>&#125;);</span><br><span class="line">	<span class="keyword">while</span>(q.size())</span><br><span class="line">	&#123;</span><br><span class="line">		pair&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt; now=q.front(); q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i:x)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;now.first==<span class="string">""</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="built_in">string</span> s=now.first+<span class="keyword">char</span>(i+<span class="string">'0'</span>);</span><br><span class="line">			<span class="keyword">int</span> r=(now.second*<span class="number">10</span>+i)%n;</span><br><span class="line">			<span class="keyword">if</span>(r==<span class="number">0</span>) <span class="keyword">return</span> s;</span><br><span class="line">			<span class="keyword">if</span>(!u[r])</span><br><span class="line">			&#123;</span><br><span class="line">				u[r]=<span class="number">1</span>;</span><br><span class="line">				q.push(&#123;s,r&#125;);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> m;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">	&#123;</span><br><span class="line">		x.resize(m);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;x[i];</span><br><span class="line">		sort(x.begin(), x.end());</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;solve()&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> UVa </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1272 - The Agency]]></title>
      <url>https://domen-blog.github.io/posts/2016-04-11/tioj-1272/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1272" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1272</a></p>
<p>用DFS入出順序做樹壓平，壓平後用資料結構維護即可。</p>
<p>可以用支援區間修改單點查詢的線段樹維護，不過這裡我用BIT。<a id="more"></a><br>一般的BIT是維護總和(加法)，不過XOR也有和加法一樣的性質(<code>sum(a,b)=c</code> -&gt; <code>a=c-b</code>, <code>xor(a,b)=c</code> -&gt; <code>a=c xor b</code>)，因此也能使用BIT維護。<br>區間修改+單點查詢，也能轉換成 單點修改+區間查詢，做個差分就行了(也就是說<code>新數列b[i]=原數列a[i]-a[i-1]</code>)，要對 L~R 加 V 就 <code>add(L,V)</code>, <code>add(R+1,-V)</code> 即可，查詢 i 的數值就 <code>sum(0~i)</code>。 (以上用加法說明，xor反而更簡單)<br>BIT寫完後就輕鬆AC + 拿TopCoder囉!</p>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; g[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> in[<span class="number">100010</span>],out[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	in[i]=++now;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j:g[i])</span><br><span class="line">		dfs(j);</span><br><span class="line">	out[i]=now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> bit[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(i&lt;=n)</span><br><span class="line">	&#123;</span><br><span class="line">		bit[i]^=<span class="number">1</span>;</span><br><span class="line">		i+=i&amp;-i;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">bool</span> s=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		s^=bit[i];</span><br><span class="line">		i-=i&amp;-i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> cnt;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;cnt;</span><br><span class="line">		<span class="keyword">while</span>(cnt--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> v;</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;v;</span><br><span class="line">			g[i].push_back(v);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">while</span>(m--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		<span class="keyword">if</span>(a==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			add(in[b]);</span><br><span class="line">			add(out[b]+<span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;sum(in[b])&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
            <tag> 樹壓平 </tag>
            
            <tag> BIT </tag>
            
            <tag> XOR </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Google Code Jam 賽制介紹]]></title>
      <url>https://domen-blog.github.io/posts/2016-04-10/google-code-jam-introduction/</url>
      <content type="html"><![CDATA[<h3 id="解題-大小測資"><a href="#解題-大小測資" class="headerlink" title="解題 / 大小測資"></a>解題 / 大小測資</h3><p>每題有分大小測資，解題時下載輸入測資檔，並上傳輸出答案<br>我習慣使用 <strong>出入重導向</strong> 的方式，或者也可以直接在程式碼裡面寫成 <strong>file i/o</strong><br><strong>小測資</strong> 下載後必須在<strong>4分鐘</strong>內上傳答案，若答案錯誤或超時未上傳，會被<strong>加4分鐘的penalty</strong>(如果最後這題AC的話)，上傳後會立刻知道是否正確  <a id="more"></a><br><strong>大測資</strong> 下載後必須在<strong>8分鐘</strong>內上傳答案，賽後才會知道是否正確，只有一次下載測資的機會，如果8分鐘內上傳了第一次後自己發現程式有bug，可以再上傳，但如果超過了8分鐘就再也不能改了。大測資只有一次機會，所以有不用想penalty的問題<br>比賽中需上傳輸出檔和程式碼，但只judge輸出檔是否正確  </p>
<h3 id="scoreboard"><a href="#scoreboard" class="headerlink" title="scoreboard"></a>scoreboard</h3><p>從首頁可以進到scoreboard，以下介紹排名方式<br>以分數排序，每一題有不同分數，大小測資也有不同分數<br>同分時，比Penalty，Penalty為 <code>最後一個AC的時間 + wrong try的數量 * 4分鐘</code>  </p>
<h3 id="賽制"><a href="#賽制" class="headerlink" title="賽制"></a>賽制</h3><p>分為 <strong>Qualification Round</strong>, <strong>Online Round 1,2,3</strong>, <strong>Onsite Finals</strong>，可以在Schedule頁面看到<br>注意下面的日曆為太平洋時區，別搞錯了，建議加到自己的日曆，這樣他就會自動轉換成台灣時間了</p>
<h5 id="Qualification-Round"><a href="#Qualification-Round" class="headerlink" title="Qualification Round"></a>Qualification Round</h5><p>可以寫27個小時，不需要熬夜比賽，只要解出30分(2016)就能晉級Online Round 1 (每年晉級需要解出的分數可能不一樣，在scoreboard上面會有一行寫出要解幾題)<br>這場能否晉級是看分數，所以排名並不重要，但排名方式一樣會和上傳時間有關，如果希望排名前面的話可以在比賽一開始就來寫</p>
<h5 id="Online-Round-1"><a href="#Online-Round-1" class="headerlink" title="Online Round 1"></a>Online Round 1</h5><p>分為A,B,C三個Sub Round，只要其中一場進前1000名就能晉級Online Round 2<br>其中可能有幾場在半夜，某幾場在白天，如果很有信心能進1000的話當然能選白天的比。以我來說是三場都比，前年(2014)就在最後一場晉級Online Round 2</p>
<h5 id="Online-Round-2"><a href="#Online-Round-2" class="headerlink" title="Online Round 2"></a>Online Round 2</h5><p>不像Round 1有分Sub Round了，很可能需要熬夜比賽<br>在3000人中前500名可以晉級Online Round 3，前1000名可以得到Google的T-shirt</p>
<h5 id="Online-Round-3"><a href="#Online-Round-3" class="headerlink" title="Online Round 3"></a>Online Round 3</h5><p>前25名可以晉級Onsite Finals</p>
<h5 id="Onsite-Finals"><a href="#Onsite-Finals" class="headerlink" title="Onsite Finals"></a>Onsite Finals</h5><p>在矽谷Google現場比賽</p>
<h3 id="雜記"><a href="#雜記" class="headerlink" title="雜記"></a>雜記</h3><p>從首頁左邊 <strong>Practice and Learn</strong> 可以看到考古題和以前的scoreboard，也可以下載別人的程式碼看他的解法</p>
<h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><h4 id="小測資如要上傳第二次會是同一筆輸入測資嗎？"><a href="#小測資如要上傳第二次會是同一筆輸入測資嗎？" class="headerlink" title="小測資如要上傳第二次會是同一筆輸入測資嗎？"></a>小測資如要上傳第二次會是同一筆輸入測資嗎？</h4><p>當然不是，否則那個四分鐘限制有什麼意義嗎？</p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Introduction </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Google Code Jam </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IOI 2014 - 猜謎遊戲(game), TIOJ 1896]]></title>
      <url>https://domen-blog.github.io/posts/2016-04-03/ioi-2014-game/</url>
      <content type="html"><![CDATA[<p>Link(original): <a href="http://www.ioinformatics.org/locations/ioi14/contest/day1/game/twn.pdf" target="_blank" rel="noopener">http://www.ioinformatics.org/locations/ioi14/contest/day1/game/twn.pdf</a><br>Link(TIOJ): <a href="http://tioj.ck.tp.edu.tw/problems/1896" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1896</a></p>
<hr>
<p>這題有三種解法，第一種大測資會TLE只能拿42分，不過我只想到第一種。</p>
<p>題解前，先做個定義:</p>
<ul>
<li>圖G: 由 尚未詢問過的邊 和 詢問過且回答yes的邊 構成</li>
<li>圖H: 由 詢問過且回答yes的邊 構成</li>
</ul>
<h3 id="solution-1"><a href="#solution-1" class="headerlink" title="solution 1"></a>solution 1</h3><a id="more"></a>
<p>一個很簡單的演算法: 盡量回答no，但假如這次詢問會造成G不連通，則回答yes。<br>實作上判斷連通需要O(N^2)，有O(N^2)次詢問，總複雜度O(N^4)<br>這可以用歸納法證明，不過由於這解法也不能AC這題，就不詳細說明啦XD</p>
<h3 id="solution-2"><a href="#solution-2" class="headerlink" title="solution 2"></a>solution 2</h3><p>我們可以發現一個性質，假如H裡面的同一個連通分量之中，有兩點間有未詢問的邊，那對方只要把那條邊留到最後，自己就必輸了；反之，如果演算法能保證那之中沒有未詢問的邊，則必勝。 (solution 1也符合這個性質)</p>
<p>做法是: 對於每次詢問的兩個點，它們一定位於H裡面兩個不同的連通分量，假如這兩個分量之間在G裡面只剩下一條邊了，就回答yes，否則回答no。</p>
<p>實作: 用一個二維陣列紀錄連通分量之間兩兩有幾條邊(初始都是1條)，當合併兩個分量時，O(N)將它們連到別的連通分量之間的邊數更新，至多更新N-1次，所以總複雜度O(N^2)。<br><figure class="highlight cpp"><figcaption><span>AC code (on TIOJ)</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"lib1896.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ec[<span class="number">1500</span>][<span class="number">1500</span>]; <span class="comment">//remain edges count between two components</span></span><br><span class="line"><span class="keyword">int</span> ds[<span class="number">1500</span>]; <span class="comment">//disjoint set</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(ds[i]==i) <span class="keyword">return</span> i;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> ds[i]=find(ds[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">(<span class="keyword">int</span> _n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	n=_n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">			ec[i][j]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		ds[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hasEdge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	u=find(u); v=find(v);</span><br><span class="line">	<span class="keyword">if</span>(ec[u][v]==<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		ds[v]=u;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">			<span class="keyword">if</span>(ds[i]==i &amp;&amp; i!=u)</span><br><span class="line">				ec[i][u]=ec[u][i]=ec[i][u]+ec[i][v];</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		ec[u][v]--;</span><br><span class="line">		ec[v][u]--;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="solution-3"><a href="#solution-3" class="headerlink" title="solution 3"></a>solution 3</h3><p><strong>一行解</strong>: <code>return ++c[max(u,v)]==max(u,v)</code><br>很神奇的解法，對於每個點，我們讓它連到恰好一個編號比較小的點，當只剩下一個編號較小的點時就回答yes。<br>我覺得這思路其實比前兩種解法都還要短啊! 不過就是沒想到要這樣構造。<br><figure class="highlight cpp"><figcaption><span>AC code (on TIOJ)</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"lib1896.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">1500</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hasEdge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> ++c[max(u,v)]==max(u,v);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料:"></a>參考資料:</h4><p>官方題解 <a href="http://ioinformatics.org/locations/ioi14/contest/day1/game/game-solution.pdf" target="_blank" rel="noopener">http://ioinformatics.org/locations/ioi14/contest/day1/game/game-solution.pdf</a><br>NOI題解(簡體中文) <a href="http://download.noi.cn/T/2014/IOI2014jietibaogao.pdf" target="_blank" rel="noopener">http://download.noi.cn/T/2014/IOI2014jietibaogao.pdf</a><br><a href="http://gagguy.blogspot.tw/2014/07/ioi-2014-game.html" target="_blank" rel="noopener">http://gagguy.blogspot.tw/2014/07/ioi-2014-game.html</a><br><a href="http://mathandalgs.com/?p=1042" target="_blank" rel="noopener">http://mathandalgs.com/?p=1042</a><br><a href="https://betaveros.wordpress.com/2014/07/26/one-line/" target="_blank" rel="noopener">https://betaveros.wordpress.com/2014/07/26/one-line/</a><br><a href="http://blog.brucemerry.org.za/2014/07/ioi-2014-day-1-analysis.html" target="_blank" rel="noopener">http://blog.brucemerry.org.za/2014/07/ioi-2014-day-1-analysis.html</a><br>jd3 &lt;– 很重要，因為我都看不懂詳解，找人討論後就懂了</p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
            <tag> IOI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搬家到Hexo]]></title>
      <url>https://domen-blog.github.io/posts/2016-03-31/move-to-hexo/</url>
      <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="~Hello World~"></a>~Hello World~</h2><p>之前blog架在<a href="http://domen.logdown.com/" title="My logdown blog" target="_blank" rel="noopener">logdown</a>，現在搬家到hexo囉! 用github.io架站<br>搬家中~ 文章尚未轉移完成</p>
<h3 id="Hexo架站日誌"><a href="#Hexo架站日誌" class="headerlink" title="Hexo架站日誌"></a>Hexo架站日誌</h3><h5 id="2016-03-31"><a href="#2016-03-31" class="headerlink" title="2016/03/31"></a>2016/03/31</h5><a id="more"></a>
<ul>
<li>在資訊社的伺服器和自己電腦上安裝了hexo，blog使用github pages架站。</li>
<li>hexo未發布的資料用git同步到bitbucket。未發布的內容好像不該完全公開，但想找個方法同步和備份原始資料，於是在自己電腦和server上都能編輯blog了!</li>
<li>安裝 Hexo Admin 插件，方便直接用web編輯。</li>
</ul>
<h5 id="2016-04-02"><a href="#2016-04-02" class="headerlink" title="2016/04/02"></a>2016/04/02</h5><ul>
<li>使用<a href="https://github.com/xing5/hexo-theme-animastars" target="_blank" rel="noopener">animastars</a>主題</li>
<li>整理新blog中~ 有空就弄一些</li>
</ul>
<h5 id="2016-04-02-1"><a href="#2016-04-02-1" class="headerlink" title="2016/04/02"></a>2016/04/02</h5><ul>
<li>blog還沒完全設定完畢，不過大概可用了，先來發了第一篇文章!</li>
</ul>
<h5 id="2016-04-04"><a href="#2016-04-04" class="headerlink" title="2016/04/04"></a>2016/04/04</h5><ul>
<li>fork animastars主題，<a href="https://github.com/domen111/hexo-theme-animastars" target="_blank" rel="noopener">自己修改過的主題</a>都更新到這上面囉!</li>
<li>加上了友情鏈結，自己幫主題加上了link widget。</li>
<li>在首頁顯示Read More，而非將整篇文章顯示出來 (文章中使用more標籤)。</li>
</ul>
<h5 id="2016-04-06"><a href="#2016-04-06" class="headerlink" title="2016/04/06"></a>2016/04/06</h5><ul>
<li>增加About Me頁面</li>
<li>剩下10篇文章尚未轉移完成</li>
</ul>
<h5 id="2016-04-10"><a href="#2016-04-10" class="headerlink" title="2016/04/10"></a>2016/04/10</h5><ul>
<li>將網址從 domen111.github.io 改至 domen-blog.github.io ，避免blog網址和和github專案共用domain name，做法則是在github上面建立一個domen-blog的Organization。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Blog </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[竹園論壇文章搬家]]></title>
      <url>https://domen-blog.github.io/posts/2015-12-01/forum-post-moving/</url>
      <content type="html"><![CDATA[<p>由於論壇壞掉到現在還沒修好，今天把以前Po在竹園論壇( <a href="http://forum.tfcis.org/" target="_blank" rel="noopener">http://forum.tfcis.org/</a> )的解題分享文章轉貼到此。<br>論壇格式和部落格有點不同，稍微做了點修改，如果有任何格式亂掉或漏圖的問題歡迎跟我反映。</p>
<p>大約標記於2014年發布的文章都是以前論壇轉移過來的，以下為列表:<br><a href="http://domen.logdown.com/posts/336598/google-code-jam-2014-round1a-a-charging-chaos" target="_blank" rel="noopener">http://domen.logdown.com/posts/336598/google-code-jam-2014-round1a-a-charging-chaos</a><br><a href="http://domen.logdown.com/posts/336572/google-code-jam-2014-round1b-a-the-repeater" target="_blank" rel="noopener">http://domen.logdown.com/posts/336572/google-code-jam-2014-round1b-a-the-repeater</a><br><a href="http://domen.logdown.com/posts/336569/google-code-jam-2013-round-2-a-ticket-swapping" target="_blank" rel="noopener">http://domen.logdown.com/posts/336569/google-code-jam-2013-round-2-a-ticket-swapping</a><br><a href="http://domen.logdown.com/posts/336561/poj-1182-food-chain" target="_blank" rel="noopener">http://domen.logdown.com/posts/336561/poj-1182-food-chain</a><br><a href="http://domen.logdown.com/posts/336559/toj-63-d-net-tricks" target="_blank" rel="noopener">http://domen.logdown.com/posts/336559/toj-63-d-net-tricks</a><br><a href="http://domen.logdown.com/posts/336553/codeforces-448c-painting-fence" target="_blank" rel="noopener">http://domen.logdown.com/posts/336553/codeforces-448c-painting-fence</a><br><a href="http://domen.logdown.com/posts/336549/toj-75-f-hiking-and-ice-elves" target="_blank" rel="noopener">http://domen.logdown.com/posts/336549/toj-75-f-hiking-and-ice-elves</a><br><a href="http://domen.logdown.com/posts/336609/google-code-jam-2014-qualification-c-minesweeper-master" target="_blank" rel="noopener">http://domen.logdown.com/posts/336609/google-code-jam-2014-qualification-c-minesweeper-master</a><br><a href="http://domen.logdown.com/posts/336563/codeforces-445c-dzy-loves-physics" target="_blank" rel="noopener">http://domen.logdown.com/posts/336563/codeforces-445c-dzy-loves-physics</a></p>
<h4 id="2016-04-06"><a href="#2016-04-06" class="headerlink" title="2016/04/06"></a>2016/04/06</h4><p>再度搬家，參考<strong><a href="/blog/2016-03-31/move-to-hexo/">搬家到Hexo</a></strong>，因此    上面連結可能是壞的，就自己找一下吧XD</p>
]]></content>
      
        <categories>
            
            <category> Blog </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1318 - 奥步戰術 Tactic]]></title>
      <url>https://domen-blog.github.io/posts/2015-11-26/tioj-1318/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1318" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1318</a></p>
<p>不錯的思考題，感覺滿有難度的，問人才會。不過測資似乎不太強，用gready假解就能喇到90分~AC。</p>
<p>TOJ上加強測資的版本: <a href="http://toj.tfcis.org/oj/pro/282/" target="_blank" rel="noopener">http://toj.tfcis.org/oj/pro/282/</a></p>
<hr>
<h1 id="題解"><a href="#題解" class="headerlink" title="題解"></a>題解</h1><a id="more"></a>
<p>每個題目分為 <code>0分-&gt;部分</code> 和 <code>部分-&gt;AC</code><br>例如範測可改為:</p>
<table>
<thead>
<tr>
<th>0分-&gt;部分</th>
<th>部分-&gt;AC</th>
</tr>
</thead>
<tbody>
<tr>
<td>3</td>
<td>1</td>
</tr>
<tr>
<td>2</td>
<td>4</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
</tr>
<tr>
<td>3</td>
<td>1</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
</tr>
</tbody>
</table>
<p>對於 <code>0分-&gt;部分</code> &gt; <code>部分-&gt;AC</code> 的題目我們稱為<code>高門檻題</code><br>對於 <code>0分-&gt;部分</code> &lt;= <code>部分-&gt;AC</code> 的題目我們稱為<code>低門檻題</code></p>
<table>
<thead>
<tr>
<th>門檻</th>
<th>0分-&gt;部分</th>
<th>部分-&gt;AC</th>
</tr>
</thead>
<tbody>
<tr>
<td>高</td>
<td>3</td>
<td>1</td>
</tr>
<tr>
<td>高</td>
<td>3</td>
<td>2</td>
</tr>
<tr>
<td>高</td>
<td>3</td>
<td>1</td>
</tr>
<tr>
<td>低</td>
<td>2</td>
<td>4</td>
</tr>
<tr>
<td>低</td>
<td>2</td>
<td>3</td>
</tr>
</tbody>
</table>
<p>對於全部都是低門檻題的狀況，我們只要把 <code>0分-&gt;部分</code> 和 <code>部分-&gt;AC</code> 拆開，直接由時間少的開始取即可。<br>對於全部都是高門檻題的狀況，有一個性質是至多只有一題會拿部分分數。</p>
<p>至於有同時有高門檻題和低門檻題的情形呢? 我們可以枚舉要拿幾個高門檻題，剩下的時間留給低門檻題(二分搜低門檻題可用幾題)</p>
<p>接下來我們遇到了另一個難題，要怎麼快速的枚舉如何拿高門檻題呢? 以下解決方式是自己想+和同學討論的，簡單敘述一下。<br>可以對高門檻題依據<code>0分-&gt;AC</code>的時間做排序，由小的開始拿，至於哪一題要拿部分分數，則從剩下未取的中選一個<code>0分-&gt;部分</code>時間最少的，或者從已拿取的中，選一個<code>部分-&gt;AC</code>時間最大的改為只拿部分分數。<br>這作法可透過暴力枚舉觀察一下來證明，不過懶得寫了XD</p>
<hr>
<h1 id="程式碼、除錯測資"><a href="#程式碼、除錯測資" class="headerlink" title="程式碼、除錯測資"></a>程式碼、除錯測資</h1><p>附上亂亂的code<br><figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii; <span class="comment">//first: partial-&gt;AC, second: 0-&gt;partial</span></span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; high; <span class="comment">//高門檻題</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; low; <span class="comment">//低門檻題</span></span><br><span class="line"><span class="keyword">int</span> lowp[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(pii a,pii b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.first+a.second&lt;b.first+b.second;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n,t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;t;</span><br><span class="line">    <span class="keyword">int</span> hc=<span class="number">0</span>,lc=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> h,c;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;h&gt;&gt;c;</span><br><span class="line">        h-=c;</span><br><span class="line">        <span class="keyword">if</span>(h&lt;c)</span><br><span class="line">        &#123;</span><br><span class="line">            high.push_back(&#123;h,c&#125;);</span><br><span class="line">            hc++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            low.push_back(h);</span><br><span class="line">            low.push_back(c);</span><br><span class="line">            lc+=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(low.begin(),low.end());</span><br><span class="line">    sort(high.begin(),high.end(),cmp);</span><br><span class="line">    lowp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lc;i++)</span><br><span class="line">        lowp[i]=lowp[i<span class="number">-1</span>]+low[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">int</span> st=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hc;i++)</span><br><span class="line">        st+=high[i].first+high[i].second;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,mnc=<span class="number">1000000000</span>;</span><br><span class="line">    <span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt; mxc;</span><br><span class="line">    mxc.insert(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hc;i++)</span><br><span class="line">        mxc.insert(high[i].first);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=hc<span class="number">-1</span>;i&gt;=<span class="number">-1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> solv=[t,&amp;ans,lc](<span class="keyword">int</span> st,<span class="keyword">int</span> ic)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(st&lt;=t)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> tc=upper_bound(lowp,lowp+lc+<span class="number">1</span>,t-st)-lowp<span class="number">-1</span>;</span><br><span class="line">                ans=max(ans,ic+tc);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        solv(st,(i+<span class="number">1</span>)*<span class="number">2</span>);</span><br><span class="line">        solv(st+mnc,(i+<span class="number">1</span>)*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">        solv(st-*mxc.rbegin(),(i+<span class="number">1</span>)*<span class="number">2</span><span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            st-=high[i].first+high[i].second;</span><br><span class="line">            mnc=min(mnc,high[i].second);</span><br><span class="line">            mxc.erase(mxc.find(high[i].first));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>附贈幾筆很強的測資 (可能比官方測資強)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">2 6</span><br><span class="line">4 1</span><br><span class="line">5 3</span><br><span class="line"></span><br><span class="line">2 5</span><br><span class="line">10 2</span><br><span class="line">5 4</span><br><span class="line"></span><br><span class="line">2 6</span><br><span class="line">6 1</span><br><span class="line">9 6</span><br><span class="line"></span><br><span class="line">2 11</span><br><span class="line">6 4</span><br><span class="line">7 6</span><br><span class="line"></span><br><span class="line">3 23</span><br><span class="line">8 7</span><br><span class="line">11 9</span><br><span class="line">12 8</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ZeroJudge b542 - 聽到這兩個人的身高，讓十萬人都驚呆了]]></title>
      <url>https://domen-blog.github.io/posts/2015-11-25/zerojudge-b542/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://zerojudge.tw/ShowProblem?problemid=b542" target="_blank" rel="noopener">http://zerojudge.tw/ShowProblem?problemid=b542</a></p>
<p>每次詢問使用爬行法O(N)求是否有相差K的兩數，總複雜度O(NQ)<br><a id="more"></a><br><figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100000</span>];</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(j&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[j]-a[i]&gt;k)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[j]-a[i]&lt;k)</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i==j)</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> q;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="keyword">if</span>(solve())</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ZeroJudge </tag>
            
            <tag> Two Pointer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1332 - 名義老爸]]></title>
      <url>https://domen-blog.github.io/posts/2015-11-08/tioj-1332/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1332" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1332</a></p>
<p>用map(也可用set包pair)隨便亂寫AC，插入的時候用map找比它大和比它小的兩數分別是誰，誰比較晚插入誰就是它的爸爸。<br>複雜度O(nlgn)，據說正解是用笛卡爾樹O(n)，參考:<br><a href="http://ckhs1328.pixnet.net/blog/post/40525136-tioj-1332-%E5%90%8D%E7%BE%A9%E8%80%81%E7%88%B8" target="_blank" rel="noopener">http://ckhs1328.pixnet.net/blog/post/40525136-tioj-1332-%E5%90%8D%E7%BE%A9%E8%80%81%E7%88%B8</a><br><a href="http://cbdcoding.blogspot.tw/2015/03/tioj-1332.html" target="_blank" rel="noopener">http://cbdcoding.blogspot.tw/2015/03/tioj-1332.html</a><br><a id="more"></a><br><figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; st;</span><br><span class="line">    st.insert(&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;);</span><br><span class="line">    st.insert(&#123;n+<span class="number">1</span>,<span class="number">-2</span>&#125;);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;::iterator it1=st.lower_bound(t), it2=it1;</span><br><span class="line">        it1--;</span><br><span class="line">        <span class="keyword">if</span>(it1-&gt;second &gt; it2-&gt;second)</span><br><span class="line">            ans[t]=it1-&gt;first;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans[t]=it2-&gt;first;</span><br><span class="line">        st.insert(&#123;t,i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[1210 - 圖論 之 簡單圖測試]]></title>
      <url>https://domen-blog.github.io/posts/2015-10-24/tioj-1210/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1210" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1210</a><br>一開始想說隨便亂連，如果發現不能連就不是簡單圖，後來發現是假解，試試以下這筆測資:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 1 2</span><br><span class="line">0</span><br></pre></td></tr></table></figure></p>
<p>如果一開始前2個點連在一起，就會造成第3個點無法連邊，但事實上可以前2點分別和第3點相連</p>
<p>後來改變作法，每次從度數最大的點開始連就對了，查了一下原來這是Havel定理<br>這篇好像說明得不錯，有Havel定理的證明<br><a href="http://blog.csdn.net/shuangde800/article/details/7857246" target="_blank" rel="noopener">http://blog.csdn.net/shuangde800/article/details/7857246</a></p>
<p>發現UVA上有一模一樣的題目(僅輸出格式不同): UVa 10720<br>POJ上的類似題，需要輸出相連關係: POJ 1659</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sort(a+i,a+n,greater&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n&amp;&amp;a[i]&gt;<span class="number">0</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i]--;</span><br><span class="line">            a[j]--;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(solve())</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes\n"</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
            <tag> Graph </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C++ STL nth_element]]></title>
      <url>https://domen-blog.github.io/posts/2015-10-03/c-stl-nth-element/</url>
      <content type="html"><![CDATA[<p><code>std::nth_element</code>保證在O(n)的時間複雜度內求出陣列中第k大的數字<br><a href="http://www.cplusplus.com/reference/algorithm/nth_element/" target="_blank" rel="noopener">http://www.cplusplus.com/reference/algorithm/nth_element/</a></p>
<p>用法網路上應該有很多說明，在此就不再解說了，不過關於它的原理網路上的中文文章就有點少了</p>
<p><code>nth_element</code>使用的演算法是<a href="https://en.wikipedia.org/wiki/Introselect" title="Introselect wikipedia" target="_blank" rel="noopener">Introselect</a>，Introselect算是優化過後的<a href="https://en.wikipedia.org/wiki/Quickselect" title="Quickselect wikipedia" target="_blank" rel="noopener">Quickselect</a></p>
<p>Quickselect的概念大概是做一半的Quicksort，Quicksort平均來說需要做lg(n)次，每次O(n)，但Quickselect每次只需做和自己相關的那一半就好了，也就是說第1次O(n),第2次O(n/2),第3次O(n/4),第4次O(n/8)…，n+n/2+n/4+n/8+n/16…=2*n，因此總複雜度為O(n)<br><a id="more"></a><br>但Quickselect有個問題就是在worse case下，會造成總共做了n次，總複雜度因次退化為O(n2)，因此Introselect在發現可能會發生worse case的情況下，會自動改用別的演算法(例如:<a href="https://en.wikipedia.org/wiki/Median_of_medians" target="_blank" rel="noopener">median-of-medians</a>)，這部分怎麼轉換我就沒仔細研究了(參考資料5)。我想這作法就大概像<code>std::sort</code>的Introsort類似，遇到worse case時就換成常數較大的heapsort。</p>
<p>研究了老半天，不過競賽上基本上就只要會用<code>std::nth_element</code>就好啦! 反正我就算研究完了還是不會想要自己寫一個Introselect或Median of medians<br>送大家一個nth_element範例: <a href="http://ideone.com/o1Aoh6" target="_blank" rel="noopener">http://ideone.com/o1Aoh6</a></p>
<h4 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料:"></a>參考資料:</h4><ol>
<li><a href="https://en.wikipedia.org/wiki/Selection_algorithm" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Selection_algorithm</a> 找出第k大數的演算法應該就叫做Selection algorithm</li>
<li><a href="https://en.wikipedia.org/wiki/Introselect" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Introselect</a></li>
<li><a href="https://en.wikipedia.org/wiki/Quickselect" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Quickselect</a></li>
<li><a href="http://stackoverflow.com/questions/29145520/how-is-nth-element-implemented" target="_blank" rel="noopener">http://stackoverflow.com/questions/29145520/how-is-nth-element-implemented</a></li>
<li><a href="http://stackoverflow.com/questions/7358912/worst-case-on-algorithm-for-doing-k-selection" target="_blank" rel="noopener">http://stackoverflow.com/questions/7358912/worst-case-on-algorithm-for-doing-k-selection</a> 有不錯的說明</li>
<li><a href="http://blog.csdn.net/xuqingict/article/details/25488865" target="_blank" rel="noopener">http://blog.csdn.net/xuqingict/article/details/25488865</a> 簡體中文文章，不過感覺有一點怪怪的</li>
<li><a href="http://www.csie.ntnu.edu.tw/~u91029/SequenceManipulation.html#3" target="_blank" rel="noopener">http://www.csie.ntnu.edu.tw/~u91029/SequenceManipulation.html#3</a> 演算法筆記其實也有相關的教學</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Algorithm </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[ZeroJudge d712 - The 3n + 1 problem]]></title>
      <url>https://domen-blog.github.io/posts/2015-09-27/zerojudge-d712/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://zerojudge.tw/ShowProblem?problemid=d712" target="_blank" rel="noopener">http://zerojudge.tw/ShowProblem?problemid=d712</a></p>
<p>Zerojudge原創題庫，UVA 100的加強版 (其實差滿多的)<br>先DP算好n=1~1000000時的cycle length，建立線段樹，之後就直接查詢RMQ就行了，然後有個i&gt;j的陷阱(竟然掉進去了真不應該)<br><a id="more"></a><br><figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[MAX+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> seg[<span class="number">4000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=MAX &amp;&amp; dp[n]!=<span class="number">-1</span>) <span class="keyword">return</span> dp[n];</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>) a=solve(n/<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> a=solve(<span class="number">3</span>*n+<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=MAX) dp[n]=a;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r) seg[idx]=dp[l];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        build(l,mid,idx*<span class="number">2</span>);</span><br><span class="line">        build(mid+<span class="number">1</span>,r,idx*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">        seg[idx]=max(seg[idx*<span class="number">2</span>],seg[idx*<span class="number">2</span>+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==L&amp;&amp;r==R) <span class="keyword">return</span> seg[idx];</span><br><span class="line">    <span class="keyword">int</span> mid=(L+R)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(r&lt;=mid) <span class="keyword">return</span> query(l,r,L,mid,idx*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(l&gt;mid) <span class="keyword">return</span> query(l,r,mid+<span class="number">1</span>,R,idx*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> max( query(l,mid,L,mid,idx*<span class="number">2</span>), query(mid+<span class="number">1</span>,r,mid+<span class="number">1</span>,R,idx*<span class="number">2</span>+<span class="number">1</span>) );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">    dp[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAX;i++)</span><br><span class="line">        solve(i);</span><br><span class="line">    build(<span class="number">1</span>,MAX,<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> i,j,l,r;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;i&gt;&gt;j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;j) tie(l,r)=make_tuple(j,i);</span><br><span class="line">        <span class="keyword">else</span> tie(l,r)=make_tuple(i,j);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>&lt;&lt;j&lt;&lt;<span class="string">' '</span>&lt;&lt;query(l,r,<span class="number">1</span>,MAX,<span class="number">1</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Segment Tree </tag>
            
            <tag> ZeroJudge </tag>
            
            <tag> DP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1851 - 第五顆星球的點燈人]]></title>
      <url>https://domen-blog.github.io/posts/2015-09-20/tioj-1851/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1851" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1851</a></p>
<p>基本上就是求N有幾個因數，如果有偶數個輸出no，奇數個輸出yes<br>由於因數是兩兩成對的，所以只要判斷n是不是一個完全平方數即可<br><a id="more"></a><br><figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">unsigned</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> t=<span class="built_in">sqrt</span>(n);</span><br><span class="line">        <span class="keyword">if</span>(t*t==n)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"yes\n"</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"no\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[POJ 1456 - Supermarket]]></title>
      <url>https://domen-blog.github.io/posts/2015-09-15/poj-1456/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://poj.org/problem?id=1456" target="_blank" rel="noopener">http://poj.org/problem?id=1456</a></p>
<p>把物品丟到時間軸上，反過來做就變成水題了，用priority_queue即可<br>滿有趣的一題，關鍵在於能不能想到把時間反轉解決<br><a id="more"></a><br><figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10000</span>;i++)</span><br><span class="line">            a[i].clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> p,q;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;p&gt;&gt;q;</span><br><span class="line">            a[q].push_back(p);</span><br><span class="line">        &#125;</span><br><span class="line">        priority_queue&lt;<span class="keyword">int</span>&gt; pq;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;a[i].size();j++)</span><br><span class="line">                pq.push(a[i][j]);</span><br><span class="line">            <span class="keyword">if</span>(pq.size())</span><br><span class="line">                ans+=pq.top(), pq.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> POJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Codeforces 280B - Maximum Xor Secondary]]></title>
      <url>https://domen-blog.github.io/posts/2015-09-14/codeforces-280b/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://codeforces.com/problemset/problem/280/B" target="_blank" rel="noopener">http://codeforces.com/problemset/problem/280/B</a></p>
<p>我的作法頗奇怪的，貼出來分享一下<br>這題可以用stack單調性O(n)解決，聽起來還滿簡單的，不過我想到的方法不太一樣(反正這題應該有很多種解法)</p>
<p>作法大概是把數字看成二進位，計算它們的有多少位元，要xor的兩個數字的位元數一定不同(除非所有數字位元數相同)，而且其中一個必有最大位元數，暴力弄一弄複雜度還是O(n) (見27行以後)<br>所有數字位元數相同時，其實可以處理成位元數不同 (見14~25行)</p>
<p>AC submission: <a href="http://codeforces.com/contest/280/submission/12995655" target="_blank" rel="noopener">http://codeforces.com/contest/280/submission/12995655</a><br><a id="more"></a><br><figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">while</span>(k&lt;=a[i])</span><br><span class="line">            k&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> s1=<span class="number">-1</span>,s2=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        s1&amp;=a[i], s2&amp;=~a[i];</span><br><span class="line">    <span class="keyword">int</span> m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(k&gt;&gt;=<span class="number">1</span>;((s1|s2)&amp;k)&gt;<span class="number">0</span>;k&gt;&gt;=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span>(s1&amp;k) m|=k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        a[i]^=m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;=k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tmx=<span class="number">0</span>,j;</span><br><span class="line">            <span class="keyword">for</span>(j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>&amp;&amp;a[j]&lt;k;j--)</span><br><span class="line">            &#123;</span><br><span class="line">                tmx=max(tmx,a[j]);</span><br><span class="line">                ans=max(ans,a[i]^tmx);</span><br><span class="line">            &#125;</span><br><span class="line">            tmx=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n&amp;&amp;a[j]&lt;k;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                tmx=max(tmx,a[j]);</span><br><span class="line">                ans=max(ans,a[i]^tmx);</span><br><span class="line">            &#125;</span><br><span class="line">            i=j<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Codeforces </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1535 - 嘿!! Let's Go E-m-i-r-p!!]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-30/tioj-1535/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1535" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1535</a></p>
<p>質數建表然後判斷是不是Emirp，至於要建到多大的質數表就在本機跑跑看，我的寫法MAX必須是10的次方否則判斷反轉時會RE，於是我用個bitset壓記憶體就過了</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100000000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="built_in">bitset</span>&lt;MAX+10&gt; np;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; em;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i!=<span class="number">0</span>)</span><br><span class="line">        t=t*<span class="number">10</span>+i%<span class="number">10</span>, i/=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> t; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=reverse(n);</span><br><span class="line">    <span class="keyword">if</span>(t==n)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> !np[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAX;i++)</span><br><span class="line">        <span class="keyword">if</span>(!np[i])</span><br><span class="line">            <span class="keyword">for</span>(ll j=(ll)i*i;j&lt;=MAX;j+=i)</span><br><span class="line">                np[j]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=MAX;i++)</span><br><span class="line">        <span class="keyword">if</span>(!np[i] &amp;&amp; check(i))</span><br><span class="line">            em.push_back(i);</span><br><span class="line">    </span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> T,n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;em[n<span class="number">-1</span>]&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1305 - 啊嘶起啦集合]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-23/tioj-1305/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1305" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1305</a></p>
<p>練習平衡樹的裸題，不過我用黑魔法把它AC了<br>使用g++內建的非標準類別<code>tree</code>，使用說明參考: <a href="http://blog.csdn.net/nilihan1999/article/details/29858309" target="_blank" rel="noopener">http://blog.csdn.net/nilihan1999/article/details/29858309</a></p>
<p>一開始WA還不知道為什麼，原來是ask的k有可能 &lt; 1</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/extc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;  </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line">tree&lt;<span class="keyword">int</span>,null_type,less&lt;<span class="keyword">int</span>&gt;,rb_tree_tag,tree_order_statistics_node_update&gt; t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s,s!=<span class="string">"exit"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="string">"insert"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(t.find(n)==t.end())</span><br><span class="line">                t.insert(n);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s==<span class="string">"remove"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> it=t.find(n);</span><br><span class="line">            <span class="keyword">if</span>(it!=t.end())</span><br><span class="line">                t.erase(it);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s==<span class="string">"ask"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(n&gt;t.size() || n&lt;<span class="number">1</span>)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"error\n"</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;*t.find_by_order(n<span class="number">-1</span>)&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
            <tag> BST </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1667 - reversed]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-23/tioj-1667/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1667" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1667</a></p>
<p>逆序數對裸題，這題的N有點小，感覺好像也可以暴力做，不過懶得測試暴力法</p>
<p><strong>解法</strong>: 用BIT做逆序數對+離散化，因為他給的數字不保證&lt;=100所以需要事先做離散化</p>
<p>輸入改用scanf就刷到rank 1了 (開心)<a id="more"></a><br><img src="/posts/2015-08-23/tioj-1667/rank1.png"></p>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i]++;</span><br><span class="line">        i+=i&amp;-i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s+=b[i];</span><br><span class="line">        i-=i&amp;-i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,a+i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            b[i]=a[i];</span><br><span class="line">        sort(b,b+n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            a[i]=lower_bound(b,b+n,a[i])-b+<span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span> b);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=i-sum(a[i]);</span><br><span class="line">            add(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
            <tag> BIT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1206 - 尋找密碼字串]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-21/tioj-1206/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1206" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1206</a></p>
<p>把題目給的字串反轉，做z value(z algorithm)即可<br>如果第i個字元(0-based)的z value( <code>z[i]</code> )&gt;=i 就代表那是一個可能的密碼，取最大值就是答案了</p>
<p>複雜度: O(n)</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> z[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)</span><br><span class="line">    &#123;</span><br><span class="line">        reverse(s.begin(),s.end());</span><br><span class="line">        z[<span class="number">0</span>]=<span class="number">-1</span>; </span><br><span class="line">        <span class="keyword">int</span> r=<span class="number">0</span>,rf=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;(<span class="keyword">int</span>)s.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j=i;</span><br><span class="line">            <span class="keyword">if</span>(r&gt;i) j=min(i+z[i-rf],r);</span><br><span class="line">            <span class="keyword">for</span>(; j&lt;(<span class="keyword">int</span>)s.size()&amp;&amp;s[j]==s[j-i]; j++);</span><br><span class="line">            z[i]=j-i;</span><br><span class="line">            <span class="keyword">if</span>(j<span class="number">-1</span>&gt;r)&#123;r=j<span class="number">-1</span>; rf=i;&#125;</span><br><span class="line"><span class="comment">//         cout&lt;&lt;z[i]&lt;&lt;' ';</span></span><br><span class="line">     &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="keyword">int</span>)s.size();i++)</span><br><span class="line">            <span class="keyword">if</span>(z[i]&gt;=i)</span><br><span class="line">                ans=max(ans,i);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UVa 12117 - ACM Puzzles]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-21/uva-12117/</url>
      <content type="html"><![CDATA[<p>Link: <a href="https://uva.onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=3269" target="_blank" rel="noopener">https://uva.onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=3269</a></p>
<h4 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h4><p>有一堆積木，要拿來拼成  的長方形，請問有幾種方法。 積木不可旋轉，答案需模1000000000000。</p>
<h4 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h4><p>位元DP記錄積木的形狀，我的寫法是記錄積木中間連續的寬度，左右兩邊多出來的形狀<br><a id="more"></a><br><img src="/posts/2015-08-21/uva-12117/pic1.png"><br>例如上圖則是{0,1,5}，左邊形狀為0，寬度為1，右邊有1+4兩格凸出來</p>
<p>dp[i][j]代表完整填滿了i行，凸出的形狀為j</p>
<p>這題有個技巧，因為以下四種格子一定會互相配對(否則沒有別種可能)，所以可以把它們合併當成同樣的格子。<br><img src="/posts/2015-08-21/uva-12117/pic2.png"></p>
<p>後來發現模數有點大會溢位，直接#define int long long</p>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> z[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)</span><br><span class="line">    &#123;</span><br><span class="line">        reverse(s.begin(),s.end());</span><br><span class="line">        z[<span class="number">0</span>]=<span class="number">-1</span>; </span><br><span class="line">        <span class="keyword">int</span> r=<span class="number">0</span>,rf=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;(<span class="keyword">int</span>)s.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j=i;</span><br><span class="line">            <span class="keyword">if</span>(r&gt;i) j=min(i+z[i-rf],r);</span><br><span class="line">            <span class="keyword">for</span>(; j&lt;(<span class="keyword">int</span>)s.size()&amp;&amp;s[j]==s[j-i]; j++);</span><br><span class="line">            z[i]=j-i;</span><br><span class="line">            <span class="keyword">if</span>(j<span class="number">-1</span>&gt;r)&#123;r=j<span class="number">-1</span>; rf=i;&#125;</span><br><span class="line"><span class="comment">//         cout&lt;&lt;z[i]&lt;&lt;' ';</span></span><br><span class="line">     &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="keyword">int</span>)s.size();i++)</span><br><span class="line">            <span class="keyword">if</span>(z[i]&gt;=i)</span><br><span class="line">                ans=max(ans,i);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> UVa </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HOJ 144 - 海綿寶寶之吹泡泡 (線段樹)]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-20/hoj-144/</url>
      <content type="html"><![CDATA[<p>線段樹裸題，貼個我習慣的線段樹寫法</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> seg[<span class="number">400040</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> v,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L==R) seg[idx]=v;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(L+R)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;=mid)</span><br><span class="line">            modify(i,v,L,mid,idx*<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            modify(i,v,mid+<span class="number">1</span>,R,idx*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">        seg[idx]=max(seg[idx*<span class="number">2</span>],seg[idx*<span class="number">2</span>+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==L&amp;&amp;r==R)</span><br><span class="line">        <span class="keyword">return</span> seg[idx];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(L+R)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(r&lt;=mid)</span><br><span class="line">            <span class="keyword">return</span> query(l,r,L,mid,idx*<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l&gt;mid)</span><br><span class="line">            <span class="keyword">return</span> query(l,r,mid+<span class="number">1</span>,R,idx*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> max( query(l,mid,L,mid,idx*<span class="number">2</span>),</span><br><span class="line">                        query(mid+<span class="number">1</span>,r,mid+<span class="number">1</span>,R,idx*<span class="number">2</span>+<span class="number">1</span>) );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n,q;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">        modify(i,t,<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> type,a,b;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;type&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(type==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a--;</span><br><span class="line">            modify(a,b,<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            a--; b--;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;query(a,b,<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">1</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HOJ </tag>
            
            <tag> Segment Tree </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1396 - 線段覆蓋]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-16/tioj-1396/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1396" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1396</a></p>
<p>code隨便亂寫，總覺得這題測資很弱，誤會題意時居然就亂寫AC了</p>
<p>分別A,B需要幾步驟再比較即可<br>這題比較需要注意的是當X==Y時，要特判如果有覆蓋到這點代表只需1步，沒有則無法獲勝。</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; ax[<span class="number">100010</span>],bx[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n,pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; *x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="keyword">if</span>(x[i].first&lt;=l&amp;&amp;x[i].second&gt;=r)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> INF;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(x,x+n);</span><br><span class="line">    <span class="keyword">int</span> cur=l,nxt=l;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==n || x[i].first&gt;cur)</span><br><span class="line">        &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            cur=nxt;</span><br><span class="line">            <span class="keyword">if</span>(cur&gt;=r)</span><br><span class="line">                <span class="keyword">return</span> ans;</span><br><span class="line">            <span class="keyword">if</span>(i==n || x[i].first&gt;cur)</span><br><span class="line">                <span class="keyword">return</span> INF;</span><br><span class="line">        &#125;</span><br><span class="line">        nxt=max(nxt,x[i].second);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ax[i].first&gt;&gt;ax[i].second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;bx[i].first&gt;&gt;bx[i].second;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r;</span><br><span class="line">        <span class="keyword">int</span> a=solve(n,ax);</span><br><span class="line">        <span class="keyword">int</span> b=solve(m,bx);</span><br><span class="line"><span class="comment">//     cout&lt;&lt;a&lt;&lt;' '&lt;&lt;b&lt;&lt;endl;</span></span><br><span class="line">     <span class="keyword">if</span>(a==INF &amp;&amp; b==INF)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"TIE"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a&lt;=b)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"A WIN"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"B WIN"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1446 - H遊戲密笈]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-16/tioj-1446/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1446" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1446</a></p>
<p>他要求在紙上輸出一行，但並不需要依序輸出，所以先用字典續排序每一行字串，使得連續兩次輸出有較大的共同前綴(可以不需要刪除)</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prefix</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;a,<span class="keyword">const</span> <span class="built_in">string</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=min(a.size(),b.size());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=b[i])</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">    <span class="keyword">return</span> len; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">    sort(s,s+n);</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">string</span> pre=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans+=pre.size()+s[i].size()-prefix(pre,s[i])*<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">        pre=s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ans+=pre.size();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TIOJ 1308 - 幾組解咧(其一)]]></title>
      <url>https://domen-blog.github.io/posts/2015-08-12/tioj-1308/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://tioj.ck.tp.edu.tw/problems/1308" target="_blank" rel="noopener">http://tioj.ck.tp.edu.tw/problems/1308</a></p>
<p>排列組合H(n,m)<br>本來在想說到底該怎麼算才不會Over Flow，50!太大了啊! 後來才知道原來用巴斯卡定理解就行了(我竟然沒想到)</p>
<p>直接依照巴斯卡定理DP遞迴下去，AC code短短的<br>其實也能用迴圈跑就行了</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">51</span>][<span class="number">51</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dp[n][m]!=<span class="number">-1</span>)<span class="keyword">return</span> dp[n][m];</span><br><span class="line">    <span class="keyword">if</span>(n==m||m==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> dp[n][m]=C(n<span class="number">-1</span>,m<span class="number">-1</span>)+C(n<span class="number">-1</span>,m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span> dp);</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m,n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;C(n+m<span class="number">-1</span>,m)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
            <tag> math </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TOJ 75 - F.與冰精靈健行]]></title>
      <url>https://domen-blog.github.io/posts/2014-07-20/toj-75/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://toj.tfcis.org/oj/pro/75/" target="_blank" rel="noopener">http://toj.tfcis.org/oj/pro/75/</a></p>
<p>隨機演算法-爬山演算法，隨便挑兩個點交換，如果答案更好就交換<br>code看起來很簡單，但我也寫錯好幾次，問了學長好幾次才寫對<br><a id="more"></a><br>爬山演算法code:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;climits&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> g[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> road[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> no=<span class="number">0</span>;no&lt;<span class="number">1000000</span>;no++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> cg1=rand()%n,cg2=rand()%n;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;cg1&lt;&lt;" "&lt;&lt;cg2&lt;&lt;endl;</span></span><br><span class="line">        swap(road[cg1],road[cg2]);</span><br><span class="line">        <span class="keyword">int</span> newans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">            newans+=g[road[i<span class="number">-1</span>]][road];</span><br><span class="line">        <span class="keyword">if</span>(newans&lt;ans)</span><br><span class="line">            ans=newans;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            swap(road[cg1],road[cg2]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            g[j]=<span class="number">1e8</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        a--; b--;</span><br><span class="line">        g[a]=g[a]=min(g[a],c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        g=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                g[j]=min(g[j],g[k]+g[k][j]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ans=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> no1=<span class="number">0</span>;no1&lt;<span class="number">100</span>;no1++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> used[<span class="number">110</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">do</span>&#123;</span><br><span class="line">                road=rand()%n;</span><br><span class="line">            &#125;<span class="keyword">while</span>(used[road]);</span><br><span class="line">            used[road]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=min(ans,solve());</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>算出來的答案(此題AC code):<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Pikachu.h"</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ask=Init();</span><br><span class="line">    <span class="keyword">switch</span>(ask)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            Answer(<span class="number">110</span>); <span class="comment">//正解</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            Answer(<span class="number">121</span>); <span class="comment">//正解</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            Answer(<span class="number">246</span>); <span class="comment">//正解</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            Answer(<span class="number">911</span>); <span class="comment">//正解為839，誤差&lt;=2N</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            Answer(<span class="number">2294</span>); <span class="comment">//正解為2113，誤差&lt;=2N</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>後來想到一種能夠增加容許誤差為4N的方法，因為隨機演算法算出的答案一定&gt;=正解，所以只要把算出的答案減2N送出，就能增加容許誤差範圍。</p>
]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Codeforces 448C - Painting Fence]]></title>
      <url>https://domen-blog.github.io/posts/2014-07-18/codeforces-448c/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://codeforces.com/contest/448/problem/C" target="_blank" rel="noopener">http://codeforces.com/contest/448/problem/C</a></p>
<p>這題有點難，本來以為要寫不出來了，沒想到在比賽剩下24分鐘的時候解出來了，解出了這一題讓我的排名變成158，rating變1721(Candidate Master)，也就是有資格比Div.1了✌，下次比賽準備被Div.1電了。</p>
<p>這題有一點DP或divide and conquer的概念，用遞迴就可以輕鬆解出，程式碼短短38行，不過要想很久。<a id="more"></a></p>
<p>下面是一筆測資的範例:<br><img src="/posts/2014-07-18/codeforces-448c/img1.png"></p>
<p>遞迴第一次執行紅色部分，試看看橫向塗色或直向比較好。</p>
<ol>
<li>若為橫向塗色，紅色有兩列，所以答案為 2+(塗上面部分的答案) ，所以就呼叫遞迴，執行黃色和綠色的部分就可以了。</li>
<li>若為直向塗色，總共有10個直行，所以答案就是10。 return 1或2答案較小的那一筆</li>
</ol>
<p>不過如果認真想會遇到一個問題: 會不會遞迴下去的部分會影響到上一層的結果呢? 這個概念和DP很像，如果會影響到的話，這個演算法就是錯的。<br>如果上層迴圈呼叫到目前迴圈，上層迴圈必定是橫向塗色，如果目前迴圈為直向塗色，將會塗到下層迴圈塗過的區域，那這樣會不會讓下層迴圈的答案變小呢? 答案是不會的，因為目前迴圈的塗色範圍不可能包含上層迴圈塗色範圍的整個橫列(否則就不會被分成兩次迴圈了)。</p>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">6000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sol</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//horizontal strokes</span></span><br><span class="line">    <span class="keyword">int</span> ans=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        ans=min(ans,a);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">if</span>(a!=<span class="number">0</span>)</span><br><span class="line">            a-=ans;</span><br><span class="line">    <span class="keyword">int</span> tl=<span class="number">-1</span>,tr=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r+<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i!=r+<span class="number">1</span> &amp;&amp; a!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tl==<span class="number">-1</span>) tl=i;</span><br><span class="line">            tr=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(tl!=<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=sol(tl,tr);</span><br><span class="line">            tl=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> min(ans,r-l+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sol(<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TOJ 63 - D.網子把戲]]></title>
      <url>https://domen-blog.github.io/posts/2014-07-17/toj-63/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://toj.tfcis.org/oj/pro/63/" target="_blank" rel="noopener">http://toj.tfcis.org/oj/pro/63/</a></p>
<p>用Floyd-Warshall演算法就可解決，求出所有點的最短路徑，然後最遠的兩點的距離就是答案。<br>這題要注意的是: 兩顆珠子之間可能會有多條繩子，必須取min才會AC (LFsWang的題目總是有陷阱啊! 我又掉進去了)</p>
<a id="more"></a>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">int</span> v,e;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;v&gt;&gt;e;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;v;j++)</span><br><span class="line">                d[j]=<span class="number">1e7</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a,b,c;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">            d[a]=d[a]=min(d[a],c); <span class="comment">//陷阱 </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v;i++)</span><br><span class="line">            d=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;v;j++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;v;k++)</span><br><span class="line">                    d[j][k]=min(d[j][k],d[j]+d[k]);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;v;j++)</span><br><span class="line">                ans=max(ans,d[j]);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TOJ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[POJ 1182 - 食物鏈]]></title>
      <url>https://domen-blog.github.io/posts/2014-07-12/poj-1182/</url>
      <content type="html"><![CDATA[<p>Link: <a href="http://poj.org/problem?id=1182" target="_blank" rel="noopener">http://poj.org/problem?id=1182</a></p>
<p>並查集(disjoint set)，書裡面的題目，我發現TOJ 89和這題好像<a id="more"></a></p>
<p>並查集的陣列(ds)需開N*3的大小<br>每種動物建立3個元素: i-A, i-B, i-C，代表i是A或B或C的情況<br>unite(i-A, j-B)代表當i為A時，j為B</p>
<p>注意</p>
<ol>
<li>這題是單筆測資，如果用多測資輸入會WA</li>
<li>必須使用cstdio，用iostream會TLE</li>
</ol>
<figure class="highlight cpp"><figcaption><span>AC code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lie() &#123;ans++;continue;&#125;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> ds[<span class="number">160000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ds[a]==a)<span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> ds[a]=find(ds[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">unite</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ds[find(a)]=find(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">same</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> find(a)==find(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n*<span class="number">3</span>;i++)</span><br><span class="line">        ds[i]=i;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> type,a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;type,&amp;a,&amp;b);</span><br><span class="line">        a--; b--;</span><br><span class="line">        <span class="keyword">if</span>(a&lt;<span class="number">0</span> || a&gt;=n || b&lt;<span class="number">0</span> || b&gt;=n)</span><br><span class="line">            lie();</span><br><span class="line">        <span class="keyword">if</span>(type==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(same(a,b+n) || same(a,b+n*<span class="number">2</span>))</span><br><span class="line">                lie();</span><br><span class="line">            unite(a,b);</span><br><span class="line">            unite(a+n,b+n);</span><br><span class="line">            unite(a+n*<span class="number">2</span>,b+n*<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(same(a,b) || same(a,b+n*<span class="number">2</span>))</span><br><span class="line">                lie();</span><br><span class="line">            unite(a,b+n);</span><br><span class="line">            unite(a+n,b+n*<span class="number">2</span>);</span><br><span class="line">            unite(a+n*<span class="number">2</span>,b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Competitive Programming </category>
            
            <category> Problems </category>
            
        </categories>
        
        
        <tags>
            
            <tag> TIOJ </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
